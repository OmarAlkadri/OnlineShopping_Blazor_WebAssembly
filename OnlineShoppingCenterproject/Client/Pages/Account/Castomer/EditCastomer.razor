@page "/editCastomer/{UserName}"
@using OnlineShoppingCenterproject.Core.Dto.CastomersDto
<ForAdminCompany />
<article class="container" style="margin-right: 20px; margin-top: 40px;">


	@if (castomer != null)
	{
		<EditForm Model="castomer" OnValidSubmit="Update">
			<DataAnnotationsValidator />
			<ValidationSummary />
			<div class="form-row col-10">
				<div class="form-group col-5">
					<label>First Name</label>
					<InputText @bind-Value="castomer.Name" class="form-control" />
					<ValidationMessage For="@(() => castomer.Name)" />
				</div>
				<div class="form-group col-5">
					<label>Last Name</label>
					<InputText @bind-Value="castomer.LastName" class="form-control" />
					<ValidationMessage For="@(() => castomer.LastName)" />
				</div>
				<div class="form-group col-5">
					<label>
						Password
					</label>
					<InputText @bind-Value="castomer.Password" type="password" class="form-control" />
					<ValidationMessage For="@(() => castomer.Password)" />
				</div>	
				<div class="form-group col-5" style="margin-top: 42px;margin-left: 10px;">
					<button disabled="@loading" class="btn btn-primary btn-lg col-3">
						@if (loading)
						{
							<span class="spinner-border spinner-border-sm mr-1"></span>
						}
						Save
					</button>
					<a href="users" class="btn btn-link col-2">Cancel</a>
				</div>
			</div>
		</EditForm>
	}
	else
	{
		<div class="text-center p-3">
			<span class="spinner-border spinner-border-lg align-center"></span>
		</div>
	}
</article>


@code {

	public CastomerForUpdateDto castomer = new CastomerForUpdateDto();

	protected override async Task OnInitializedAsync()
	{
		castomer = new CastomerForUpdateDto();
	}

	[Parameter]
	public string UserName { get; set; }
	public bool loading = false;

	public async Task Update()
	{
		loading = true;
		await Http.PutAsJsonAsync<CastomerForUpdateDto>($"api/Castomer/{UserName}", castomer);
		NavigationManager.NavigateTo("/");
	}
}