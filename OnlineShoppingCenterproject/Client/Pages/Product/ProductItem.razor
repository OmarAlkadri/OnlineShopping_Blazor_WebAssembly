@using OnlineShoppingCenterproject.Client.Services
@using OnlineShoppingCenterproject.Core.Entities
@inject IProductService ProductService
@inject ICartService CartService

@page "/ProductItem/{Id:guid}"

<ForAnother />
<article class="container">
	<div class="container">
		<div class="row">
			<div class="col-md-5">
				<div id="carouselExampleControls" class="carousel slide" data-ride="carousel">
					<div class="carousel-inner">
						<div class="carousel-item active">
							<img class="d-block w-100" src="/images/@product.Foto" alt="First slide">
						</div>
						<div class="carousel-item">
							<img class="d-block w-100" src="/images/@product.Foto" alt="Second slide">
						</div>
						<div class="carousel-item">
							<img class="d-block w-100" src="/images/@product.Foto" alt="Third slide">
						</div>
					</div>
					<a class="carousel-control-prev" href="#carouselExampleControls" role="button" data-slide="prev">
						<span class="carousel-control-prev-icon" aria-hidden="true"></span>
						<span class="sr-only">Previous</span>
					</a>
					<a class="carousel-control-next" href="#carouselExampleControls" role="button" data-slide="next">
						<span class="carousel-control-next-icon" aria-hidden="true"></span>
						<span class="sr-only">Next</span>
					</a>
				</div>
			</div>
			<div class="col-md-7">
				<p class="newarrival text-center">Yeni</p>
				<h2>Name: @product.Name</h2>
				<p>Model Number: @product.ModelNumber</p>
				<p class="price">Price: @product.UnitPrice TL</p>
				<p><b>Indirim: </b>200 TL</p>
				<p><b>Durum: </b>Yeni</p>
				<p><b>Marka: </b>@product.CompanyName</p>
				<button @onclick="addProductForBasket" class="btn btn-outline-success" style="margin-bottom: 20px;">Add To Basket</button>
			</div>
		</div>
	</div>
</article>
@code {
	[Parameter]
	public Guid Id { get; set; }
	public Product product { get; set; } = new Product();
	private Boolean IsClick = false;
	protected override async Task OnInitializedAsync()
	{
		product = ProductService.PagedProducts.Results.FirstOrDefault(x => x.Id == Id);
		if (product == null)
		{
			product = new Product();
			product = await Http.GetFromJsonAsync<Product>($"api/Product/ProductItem/{Id}");
			if (product == null)
			{
				product = new Product();
				NavigationManager.NavigateTo("/");
			}
		}
	}

	private async Task addProductForBasket()
	{
		IsClick = true;
		StateHasChanged();
		CartItems a = new CartItems();
		a.Quantity = 1;
		a.Price = product.UnitPrice * a.Quantity;
		a.ProductId = product.Id;
		a.Product = product;
		await CartService.AddToCart(a);
		IsClick = false;
		StateHasChanged();
	}
}
